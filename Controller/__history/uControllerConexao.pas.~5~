unit uControllerConexao;

interface

uses SysUtils, uDAOConexao, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error,
  FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool,
  FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait, System.Classes, Data.DB,
  FireDAC.Comp.Client, FireDAC.Phys.MySQL;

type

    TControllerConexao = class
    private
      FConexao: TDAOConexao;

      constructor Create ;
      destructor Destroy ; Override ;

    public
      property daoConexao : TDAOConexao read FConexao write FConexao;
      class function getInstance : TControllerConexao ;

    end;

implementation

var
  instanciaBD :  TControllerConexao ;

{ TControllerConexao }

constructor TControllerConexao.Create;
begin
  inherited Create;

  FConexao := TDAOConexao.Create;
end;

destructor TControllerConexao.Destroy;
begin
  inherited;
  FreeAndNil(FConexao);
end;

class function TControllerConexao.getInstance: TControllerConexao;
begin
  if instanciaBD = nil then
     instanciaBD := TControllerConexao.Create;
  result := instanciaBD;
end;

initialization
  instanciaBD := nil

finalization
  if instanciaBD <> nil then
     instanciaBD.Free ;

end.
